{"version":3,"sources":["../node_modules/react-bootstrap/esm/InputGroup.js","components/Cases/Case/Case.js","components/Cases/Case/CaseContainer.js"],"names":["InputGroup","React","forwardRef","_ref","ref","bsPrefix","size","className","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","createElement","_extends","classNames","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","displayName","Text","Radio","type","Checkbox","Append","Prepend","Case","useState","editMode","setEditMode","title","setTitle","date","setDate","adress","setAdress","firstName","setFirstName","secondName","setSecondName","dob","setDob","description","setDescription","deleted","setDeleted","useEffect","caseElement","to","_id","Card","Body","ListGroup","Item","FormControl","value","onChange","e","currentTarget","Footer","ButtonGroup","Button","onClick","mewCaseElement","updateCaseElement","variant","deleteCaseElement","Preloader","CaseContainer","caseId","this","match","params","getCaseElement","compose","withAuthRedirect","connect","state","caseElementPage","withRouter"],"mappings":"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","file":"static/js/3.a6b7c686.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return React.createElement(InputGroupText, null, React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return React.createElement(InputGroupText, null, React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\nInputGroup.displayName = 'InputGroup';\nInputGroup.Text = InputGroupText;\nInputGroup.Radio = InputGroupRadio;\nInputGroup.Checkbox = InputGroupCheckbox;\nInputGroup.Append = InputGroupAppend;\nInputGroup.Prepend = InputGroupPrepend;\nexport default InputGroup;","import React, { useState, useEffect } from 'react';\nimport { Button, ButtonGroup, Card, ListGroup, InputGroup, FormControl } from 'react-bootstrap';\nimport Preloader from '../../common/Preloader';\nimport './Case.css';\nimport {Redirect} from 'react-router-dom';\n\n\nconst Case = (props) => {\n  const [editMode, setEditMode] = useState(false);\n  const [title, setTitle] = useState();\n  const [date, setDate] = useState();\n  const [adress, setAdress] = useState();\n  const [firstName, setFirstName] = useState();\n  const [secondName, setSecondName] = useState();\n  const [dob, setDob] = useState();\n  const [description, setDescription] = useState();\n  const [deleted, setDeleted] = useState(false);\n\n  useEffect(() => {\n    setTitle(props.caseElement.title);\n    setDate(props.caseElement.date);\n    setAdress(props.caseElement.adress);\n    setFirstName(props.caseElement.firstName);\n    setSecondName(props.caseElement.secondName);\n    setDob(props.caseElement.dob);\n    setDescription(props.caseElement.description);\n  }, [props.caseElement])\n\n  const updateCase = () => {\n    let mewCaseElement = {title, date, adress, firstName, secondName, dob, description};\n    props.updateCaseElement(props.caseElement._id, mewCaseElement);\n    setEditMode(false);\n  }\nconst deleteCase = () => {\n  props.deleteCaseElement(props.caseElement._id);\n  setDeleted(true);\n}\n  if (deleted) return <Redirect to=\"/cases\" />\n  if (!props.caseElement) return <Preloader />\n  return (\n    <div className=\"case-element\">\n       <header className=\"case-element-header\">\n       CASE â„– {props.caseElement._id}\n      </header>\n      <Card>\n        <Card.Body>\n          <ListGroup className=\"list-group-flush\">\n            <ListGroup.Item as=\"div\">\n              {(!editMode)\n                ?\n                <ListGroup.Item>\n                  Title:{props.caseElement.title && title}\n                </ListGroup.Item>\n                :\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>Title: </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl type=\"text\" value={title} onChange={(e) => setFirstName(e.currentTarget.value)}/>\n                </InputGroup>\n              }\n            </ListGroup.Item>\n            <ListGroup.Item as=\"div\">\n              {(!editMode)\n                ?\n                <ListGroup.Item>\n                  Date: {props.caseElement.date && date}\n                </ListGroup.Item>\n                :\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>Date: </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl type=\"date\" value={date} onChange={(e) => setFirstName(e.currentTarget.value)}/>\n                </InputGroup>\n              }\n            </ListGroup.Item>\n            <ListGroup.Item as=\"div\">\n              {(!editMode)\n                ?\n                <ListGroup.Item>\n                  Adress: {props.caseElement.adress}\n                </ListGroup.Item>\n                :\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>Adress: </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl type=\"text\" value={adress} onChange={(e) => setAdress(e.currentTarget.value)}/>\n                </InputGroup>\n              }\n            </ListGroup.Item>\n            <ListGroup.Item as=\"div\">\n              {(!editMode)\n                ?\n                <ListGroup.Item>\n                  First name: {props.caseElement.firstName && firstName}\n                </ListGroup.Item>\n                :\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>First name: </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl type=\"text\" value={firstName} onChange={(e) => setFirstName(e.currentTarget.value)}/>\n                </InputGroup>\n              }\n            </ListGroup.Item>\n            <ListGroup.Item as=\"div\">\n              {(!editMode)\n                ?\n                <ListGroup.Item>\n                  Second name: {props.caseElement.secondName}\n                </ListGroup.Item>\n                :\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>Second name: </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl type=\"text\" value={secondName} onChange={(e) => setSecondName(e.currentTarget.value)}/>\n                </InputGroup>\n              }\n            </ListGroup.Item>\n            <ListGroup.Item as=\"div\">\n              {(!editMode)\n                ?\n                <ListGroup.Item>\n                  Date of birth: {props.caseElement.dob}\n                </ListGroup.Item>\n                :\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>Date of birth: </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl type=\"text\" value={dob} onChange={(e) => setDob(e.currentTarget.value)}/>\n                </InputGroup>\n              }\n            </ListGroup.Item>\n            <ListGroup.Item as=\"div\">\n              {(!editMode)\n                ?\n                <ListGroup.Item>\n                  Description: {props.caseElement.description}\n                </ListGroup.Item>\n                :\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>Description: </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl type=\"text\" value={description} onChange={(e) => setDescription(e.currentTarget.value)}/>\n                </InputGroup>\n              }\n            </ListGroup.Item>\n          </ListGroup>\n        </Card.Body>\n        <Card.Footer>\n          <ButtonGroup>\n          {(!editMode) \n          ?\n          <Button className=\"case-element-btn-edit\" onClick={() => {setEditMode(true)}}>Edit</Button>\n          :\n          <Button className=\"case-element-btn-save\" onClick={updateCase}>Save</Button>\n          }\n            <Button className=\"case-element-btn-delete\" variant=\"danger\" onClick={deleteCase}>Delete</Button>\n          </ButtonGroup>\n        </Card.Footer>\n      </Card>\n    </div>\n  )\n}\n\nexport default Case;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Case from '../Case/Case';\nimport {getCaseElement, updateCaseElement} from './../../../redux/caseElementReducer';\nimport {deleteCaseElement} from './../../../redux/casesReducer';\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nclass CaseContainer extends React.Component {\n    componentDidMount() {\n        let caseId = this.props.match.params.caseId;\n        this.props.getCaseElement(caseId);\n    }\n    render() {\n        return (\n            <Case {...this.props}\n             caseElement={this.props.caseElement} \n             updateCaseElement={this.props.updateCaseElement} \n             deleteCaseElement={this.props.deleteCaseElement}/>\n        )\n    }\n}\nlet mapStateToProps = (state) => ({\n    caseElement: state.caseElementPage.caseElement,\n    updateCaseElement: state.caseElementPage.updateCaseElement,\n    deleteCaseElement: state.caseElementPage.deleteCaseElement\n})\n\nexport default compose(withAuthRedirect, connect(mapStateToProps, {getCaseElement, updateCaseElement, deleteCaseElement}), withRouter)(CaseContainer);\n"],"sourceRoot":""}