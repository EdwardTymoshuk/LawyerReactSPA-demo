{"version":3,"sources":["components/Add/Add.js","components/Header/Header.js","redux/authReducer.js","components/Header/HeaderContainer.js","components/Add/AddContainer.js","components/Cases/Cases.js","components/Cases/CasesContainer.js","components/Login/Login.js","components/Login/LoginContainer.js","App.js","redux/redux-store.js","index.js","api/api.js","redux/casesReducer.js","components/common/Preloader.js","hoc/withAuthRedirect.js","redux/caseElementReducer.js","assets/images/preloader.svg"],"names":["newCase","Header","props","Navbar","expand","variant","fixed","className","Brand","Nav","Link","Button","to","Form","inline","FormControl","type","placeholder","isAuth","name","onClick","logOut","initialState","email","setAuthUserData","authReducer","state","action","HeaderContainer","bind","this","authMe","React","Component","connect","auth","Add","title","createRef","date","adress","firstName","secondName","dob","description","onCaseChange","current","value","updateNewCase","Modal","size","aria-labelledby","centered","closeButton","Title","id","Body","onChange","ref","for","if","required","onHide","uploadCase","Footer","AddContainer","Cases","useState","caseAdd","setCaseAdd","show","cases","icon","faPlus","map","item","Card","key","_id","ListGroup","ListGroupItem","ButtonGroup","CasesContainer","length","getCases","isFetching","Preloader","compose","withAuthRedirect","casesPage","Login","setEmail","password","setPassword","Group","controlId","Label","Control","e","target","Text","setLogin","LoginContainer","setLoginData","dispatch","a","async","loginAPI","loginMe","response","status","data","alert","CaseContainer","lazy","App","exact","path","render","fallback","reducers","combineReducers","casesReducer","caseElementPage","caseElementReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById","instance","axios","baseURL","headers","casesAPI","get","then","getCaseElement","caseId","updateCaseElement","caseElement","patch","deleteCaseElement","delete","addCaseElement","post","toggleIsFetching","body","alt","src","preloader","mapStateToPropsForRedirect","RedirectComponent","setCaseElement","module","exports"],"mappings":"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","file":"static/js/main.d1405c76.chunk.js","sourcesContent":["import React from 'react';\nimport './Add.css';\nimport { Modal, Button} from 'react-bootstrap';\n\nlet newCase;\n\nconst Add = (props) => {\n  let title = React.createRef();\n  let date = React.createRef();\n  let adress = React.createRef();\n  let firstName = React.createRef();\n  let secondName = React.createRef();\n  let dob = React.createRef();\n  let description = React.createRef();\n \n\n  const addCase = () => {\n    props.onHide();\n    props.uploadCase(newCase);\n    }\n\n  const onCaseChange = () => {\n    newCase = {\n      title: title.current.value,\n      date: date.current.value,\n      adress: adress.current.value,\n      firstName: firstName.current.value,\n      secondName: secondName.current.value,\n      dob: dob.current.value,\n      description: description.current.value,\n    }\n    props.updateNewCase(newCase);\n  }\n\n  return (\n    <div>\n<Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          To add a new case please fill the fields below:\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n\n<form>\n        <div>\n          <label>\n           Title:\n        </label>\n          <input onChange={onCaseChange} ref={title} />\n        </div>\n        <div>\n          <label>\n           Date:\n        </label>\n          <input onChange={onCaseChange} ref={date} />\n        </div>\n        <div>\n          <label>\n            Adress:\n        </label>\n          <input onChange={onCaseChange} ref={adress}/>\n        </div>\n        <div>\n          <label for=\"firstName\">\n            First name:\n        </label>\n          <input if=\"firstName\" onChange={onCaseChange} ref={firstName} required/>\n        </div>\n        <div>\n          <label>\n            Second name:\n        </label>\n          <input onChange={onCaseChange} ref={secondName} required/>\n        </div>\n        <div>\n          <label>\n            Date of birth:\n        </label>\n          <input onChange={onCaseChange} ref={dob}/>\n        </div>\n        <div>\n          <label>\n            Description:\n        </label>\n          <input onChange={onCaseChange} ref={description}/>\n        </div>\n        <div>\n          <button type=\"submit\" onClick={addCase}>\n            Save\n        </button>\n        </div>\n        </form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n    </div>\n  )\n}\n\n\nexport default Add;","import React from 'react';\nimport './Header.css';\nimport {Navbar, Form, FormControl, Button, Nav} from 'react-bootstrap';\nimport {NavLink, Link} from 'react-router-dom';\n\nconst Header = (props) => {\n    return (\n        <Navbar expand=\"lg\" variant=\"dark\" fixed=\"top\" className=\"header\">\n        <Navbar.Brand className=\"header-brand\" >LAWYER REACT APP</Navbar.Brand>\n        <Nav.Link className=\"header-cases\"><Button><Link to={'/'}>Cases</Link></Button></Nav.Link>\n          <Form inline className=\"header-search\">\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2 header-search-input\" />\n            <Button className=\"header-search-btn\">Search</Button>\n          </Form>\n          <Nav.Link className=\"header-login\">\n            {props.isAuth \n            ? <div><div className=\"header-login-greating\">Nice to see you, {props.name}!</div><Button className=\"header-logout-btn\" onClick={props.logOut}>Logout</Button></div>\n            : <Button className=\"header-login-btn\"><NavLink to={'/login'}>Login</NavLink></Button>}\n           </Nav.Link>\n      </Navbar>\n    )\n}\n\nexport default Header;","import {loginAPI} from '../api/api'\n\nconst SET_USER_DATA = 'SET_USER_DATA';\nconst SET_LOGOUT = 'SET_LOGOUT';\nconst SET_AUTH_ME = 'SET_AUTH_ME';\n\nlet initialState = {\n  name: null,\n  email: null,\n  isAuth: false\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA: {\n      return {\n        ...state,\n        name: action.name,\n        email: action.email,\n        isAuth: true\n      }\n    }\n    case SET_LOGOUT: {\n      return {\n        ...state,\n        name: null,\n        email: null,\n        isAuth: false\n      }\n    }\n    case SET_AUTH_ME: {\n      return {\n        ...state\n      }\n    }\n    default:\n      return state;\n  }\n}\n\nexport const setAuthUserData = (name, email) => ({ type: SET_USER_DATA, name, email});\nexport const logOut = () => ({type: SET_LOGOUT});\nexport const authMe = () => ({type: SET_AUTH_ME})\nexport const setLoginData = (email, password) => async (dispatch) => {\n    let response = await loginAPI.loginMe({email, password});\n      if (response.status === 200) { \n        dispatch(setAuthUserData(response.data.name, response.data.email));\n        alert('You`re loged in!')\n      } else { \n        alert('Login failed!')\n    }\n}\nexport default authReducer;","import React from 'react';\nimport Header from './Header';\nimport {connect} from 'react-redux';\nimport {authMe, logOut} from '../../redux/authReducer';\n\nclass HeaderContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n  }\n  logOut() {\n    this.props.logOut();\n  }\ncomponentDidMount() {\n    this.props.authMe();\n}\n  render() {\n    return (\n      <Header {...this.props} logOut={this.logOut}/>\n    )\n  }\n}\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  name: state.auth.name\n})\n  \nexport default connect(mapStateToProps, {authMe, logOut})(HeaderContainer);","import { connect } from 'react-redux';\nimport Add from './Add';\nimport { updateNewCase, uploadCase} from '../../redux/casesReducer';\n\nlet mapStateToProps = (state) => {\n    return {\n    }\n}\n\nconst AddContainer = connect(mapStateToProps, {updateNewCase, uploadCase})(Add)\n\nexport default AddContainer;","import React from \"react\";\nimport { Card, ListGroup, ListGroupItem, Button, ButtonGroup } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { NavLink } from 'react-router-dom';\nimport AddContainer from '../Add/AddContainer';\nimport './Cases.css';\n\nconst Cases = (props) => {\n    const [caseAdd, setCaseAdd] = React.useState(false);\n    if (caseAdd) return <AddContainer show={caseAdd} onHide={() => setCaseAdd(false)} cases={props.cases} />\n    return (\n        <div className=\"cases\">\n            <header className=\"cases-header\">\n                ALL CASES\n            </header>\n            <div>\n                <Button className=\"cases-btn\" onClick={() => setCaseAdd(true)} variant=\"light\"><FontAwesomeIcon icon={faPlus} size=\"5x\" /></Button>\n            </div>\n            <div className=\"cases-body\">\n                {\n                    props.cases.map((item) => {\n                        return <Card key={item._id}>\n                            <Card.Header>\n                                No of case: {item._id}\n                            </Card.Header>\n                            <ListGroup className=\"list-group-flush\">\n                                <ListGroupItem>Title: {item.title}</ListGroupItem>\n                                <ListGroupItem>Date: {item.date}</ListGroupItem>\n                                <ListGroupItem>First name: {item.firstName}</ListGroupItem>\n                                <ListGroupItem>Second name: {item.secondName}</ListGroupItem>\n                                <ListGroupItem>Adress: {item.adress}</ListGroupItem>\n                            </ListGroup>\n                            <Card.Body>\n                                <ButtonGroup>\n                                    <Button variant=\"primary\"><NavLink to={\"/cases/\" + item._id}>Show</NavLink></Button>\n                                </ButtonGroup>\n                            </Card.Body>                    \n                        </Card>\n                    })\n                }\n                <div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cases;","import React from 'react';\nimport { connect } from 'react-redux';\nimport {compose} from 'redux';\nimport { getCases } from '../../redux/casesReducer';\nimport Cases from './Cases';\nimport Preloader from '../common/Preloader';\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\n\nclass CasesContainer extends React.Component {\n    componentDidMount() {\n       if (!this.props.cases.length) this.props.getCases();\n    }\n     render() {\n        return <>\n            {this.props.isFetching ? <Preloader />  : null }\n            <Cases cases={this.props.cases} />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        cases: state.casesPage.cases,\n        isFetching: state.casesPage.isFetching,\n    }\n}\n\nexport default compose(withAuthRedirect, connect(mapStateToProps, {getCases}))(CasesContainer);","import React, {useState, useEffect} from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport {Redirect} from 'react-router-dom';\nimport './Login.css';\n\nconst Login = (props) => {\n\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n\n  if (props.isAuth) return <Redirect to=\"/cases\" />\n\n  return (\n        <div className=\"login-form\">\n        <Form>\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"string\" placeholder=\"Enter email\" onChange={e => setEmail(e.target.value)}/>\n    <Form.Text className=\"text-muted\">\n      We'll never share your email with anyone else.\n    </Form.Text>\n  </Form.Group>\n\n  <Form.Group controlId=\"formBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)}/>\n  </Form.Group>\n  <Button variant=\"primary\" onClick={() => props.setLogin(email, password)}>\n    Submit\n  </Button>\n</Form>\n        </div>\n    )\n}\nexport default Login;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setLoginData } from '../../redux/authReducer';\nimport Login from './Login';\n\nclass LoginContainer extends React.Component {\n  setLogin = (email, password) => {\n    this.props.setLoginData(email, password);\n  }\n  render() {\n    return (\n      <Login {...this.props} setLogin={this.setLogin}/>\n    )\n  }\n}\nlet mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth\n  \n} )\n  export default connect(mapStateToProps, {setLoginData})(LoginContainer);","import React, { Suspense } from 'react';\nimport './App.css';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport { Route,Switch} from 'react-router-dom';\nimport CasesContainer from './components/Cases/CasesContainer';\nimport LoginContainer from './components/Login/LoginContainer';\nimport Preloader from './components/common/Preloader';\n\nconst CaseContainer = React.lazy(() => import('./components/Cases/Case/CaseContainer'))\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <HeaderContainer />\n     <Switch>\n        <Route exact path=\"/\" render={() => <CasesContainer />} />\n        <Route exact path=\"/cases\" render={() => <CasesContainer />} />\n        <Route path=\"/login\" render={() => <LoginContainer />} />\n        <Route path=\"/cases/:caseId\" render={() => <Suspense fallback={<Preloader />}><CaseContainer /></Suspense>} />\n      </Switch>\n    </div>\n\n  );\n}\n\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport casesReducer from './casesReducer';\nimport caseElementReducer from './caseElementReducer';\nimport authReducer from './authReducer';\nimport thunkMiddleware from 'redux-thunk';\n\nlet reducers = combineReducers ({\n    casesPage: casesReducer,\n    caseElementPage:caseElementReducer,\n    auth: authReducer\n})\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\nwindow.store = store;\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport store from './redux/redux-store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>, document.getElementById('root'));\n\n","import * as axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:3000',\n    headers: {\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZTU2OGI3ZGVhNWE4MzQxM2U0M2RjMTIiLCJpYXQiOjE1ODMwODU3NDN9.xX8_VysEZVWlYVLItbV-Azk88ZT772zjyn0PxyZ0x9Q'\n    }\n})\n\nexport const casesAPI = {\n    getCases() {\n        return instance.get('/cases').then(response => response.data);\n        },\n    getCaseElement(caseId) {\n        return instance.get('/cases/' + caseId);\n    },\n    updateCaseElement(caseId, caseElement) {\n       let {title, date, adress, firstName, secondName, dob, description} = caseElement;\n        return instance.patch('/cases/' + caseId, {title, date, adress, firstName, secondName, dob, description});\n    },\n    deleteCaseElement(caseId) {\n        return instance.delete('/cases/' + caseId);\n    },\n    addCaseElement(newCase) {\n        return instance.post('/cases', newCase);\n    }\n    }\n\nexport const loginAPI = {\n    loginMe(email, password) {\n        return instance.post('/users/login', {email, password})\n    },\n    authMe() {\n        return instance.get('/users/me');\n    }\n}","import { casesAPI } from \"../api/api\";\n\nconst SET_CASES = 'SET_CASES';\nconst ADD_CASE = 'ADD_CASE';\nconst UPDATE_NEW_CASE = 'UPDATE_NEW_CASE';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\n\nlet initialState = {\n  cases: [],\n  isFetching: false\n}\n\nconst casesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CASES:\n      return { ...state, cases: [...action.cases] }\n    case ADD_CASE:\n      let body = state.newCase;\n      return {\n        ...state,\n        newCase: {},\n        cases: [...state.cases, body]\n      }\n    case UPDATE_NEW_CASE:\n      return {\n        ...state,\n        newCase: action.newCase\n      }\n    case TOGGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching\n      }\n    default:\n      return state;\n  }\n}\nexport const setCases = (cases) => ({ type: SET_CASES, cases });\nexport const addCase = () => ({ type: ADD_CASE });\nexport const updateNewCase = (newCase) => ({ type: UPDATE_NEW_CASE, newCase });\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\n\nexport const getCases = () => async (dispatch) => {\n  dispatch(toggleIsFetching(true));\n  let data = await casesAPI.getCases();\n  dispatch(toggleIsFetching(false));\n  dispatch(setCases(data));\n}\nexport const uploadCase = (newCase) => async (dispatch) => {\n  let response = await casesAPI.addCaseElement(newCase);\n  if (response.status === 200) { alert(\"New case was successfully added!\") }\n  dispatch(getCases());\n}\n\nexport const deleteCaseElement = (caseId) => async (dispatch) => {\n  let response = await casesAPI.deleteCaseElement(caseId);\n  if (response.status === 200) alert('The case was succesfully deleted!');\n  dispatch(getCases());\n}\n\nexport default casesReducer;","import React from 'react';\nimport preloader from '../../assets/images/preloader.svg';\n\nconst Preloader = (props) => {\n    return (\n        <div className=\"preloader\">\n            <img alt=\"preloader\" src={preloader} />\n        </div>\n    )\n}\n\nexport default Preloader;","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n        if (!this.props.isAuth) return <Redirect to='/login'/>\n        return <Component {...this.props} />\n    }\n}\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n    return ConnectedAuthRedirectComponent\n}\n","import { casesAPI } from \"../api/api\";\n\nconst SET_CASE_ELEMENT = 'SET_CASE_ELEMENT';\n\nlet initialState = {\n  caseElement: {}\n}\n\nconst caseElementReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CASE_ELEMENT: {\n      return {\n        ...state,\n        caseElement: action.caseElement\n      }\n    }\n    default:\n      return state;\n  }\n}\n\nexport const setCaseElement = (caseElement) => ({ type: SET_CASE_ELEMENT, caseElement });\n\nexport const getCaseElement = (caseId) => async (dispatch) => {\n  let response = await casesAPI.getCaseElement(caseId);\n    if (response.status === 200) dispatch(setCaseElement(response.data)); \n}\nexport const updateCaseElement = (caseId, caseElement) => async (dispatch) => {\n  let response = await casesAPI.updateCaseElement(caseId, caseElement);\n  if (response.status === 200) dispatch(setCaseElement(caseElement)); \n}\n\n\nexport default caseElementReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.b71c9e01.svg\";"],"sourceRoot":""}